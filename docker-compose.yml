version: "3.8"

services:



  mongo:
    image: mongo:latest
    container_name: 'kevins-mongodb-container'
    restart: always
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
    #   - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    #   - MONGO_INITDB_DATABASE=yolomy
    ports:
      - "27017:27017"

    
    volumes:
      # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
      - yolo_vol:/data/db

    # command: [--auth]
    networks:
      - yolo_network







    
  mongo-express:
    image: mongo-express
    restart: always

    ports:
      - 8081:8081

    env_file: ./.env
    

    environment:

      
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017/yolomy

    links:
      - mongo
    networks:
      - yolo_network
    volumes:
      - yolo_vol:/data/db






    
  backend:
    image: kimutaikk/backend_image_yolo:v1.0.2
    depends_on:
      - mongo
    # build: ./backend
    restart: always
    env_file: ./.env
    ports:
      - 5000:5000
    environment:
        PORT: 5000
        DB_URI: mongodb://mongo:27017

    # - The above DB_URI environment variable allows for the backend container to communicate with the mongo container , 
    # the host specified and the port are the same as the mongo service above allowing for communication through the yolo_network bridge
   
    stdin_open: true
    tty: true

    networks:
      - yolo_network
    volumes:
      - yolo_vol:/data/db


  client:
    image: kimutaikk/client_image_yolo:v1.0.0
     
    # build: ./client
    ports: 
      - 3000:3000
    stdin_open: true
    tty: true 
    depends_on:
      - backend
   
volumes:
  yolo_vol: {}


networks:
  yolo_network:
      driver: bridge


